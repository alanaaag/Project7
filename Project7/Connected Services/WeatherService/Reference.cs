//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project7.WeatherService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AverageSunCalulation", ReplyAction="http://tempuri.org/IService/AverageSunCalulationResponse")]
        string AverageSunCalulation(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AverageSunCalulation", ReplyAction="http://tempuri.org/IService/AverageSunCalulationResponse")]
        System.Threading.Tasks.Task<string> AverageSunCalulationAsync(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Weather5day", ReplyAction="http://tempuri.org/IService/Weather5dayResponse")]
        string[] Weather5day(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Weather5day", ReplyAction="http://tempuri.org/IService/Weather5dayResponse")]
        System.Threading.Tasks.Task<string[]> Weather5dayAsync(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/NaturalHazards", ReplyAction="http://tempuri.org/IService/NaturalHazardsResponse")]
        decimal NaturalHazards(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/NaturalHazards", ReplyAction="http://tempuri.org/IService/NaturalHazardsResponse")]
        System.Threading.Tasks.Task<decimal> NaturalHazardsAsync(decimal latitude, decimal longitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Project7.WeatherService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Project7.WeatherService.IService>, Project7.WeatherService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AverageSunCalulation(string zipCode) {
            return base.Channel.AverageSunCalulation(zipCode);
        }
        
        public System.Threading.Tasks.Task<string> AverageSunCalulationAsync(string zipCode) {
            return base.Channel.AverageSunCalulationAsync(zipCode);
        }
        
        public string[] Weather5day(string zipcode) {
            return base.Channel.Weather5day(zipcode);
        }
        
        public System.Threading.Tasks.Task<string[]> Weather5dayAsync(string zipcode) {
            return base.Channel.Weather5dayAsync(zipcode);
        }
        
        public decimal NaturalHazards(decimal latitude, decimal longitude) {
            return base.Channel.NaturalHazards(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<decimal> NaturalHazardsAsync(decimal latitude, decimal longitude) {
            return base.Channel.NaturalHazardsAsync(latitude, longitude);
        }
    }
}
